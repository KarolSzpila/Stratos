/*
 * FlightControlControler.cpp
 *
 *  Created on: 30.10.2017
 *      Author: Karol
 */

#include "FlightControlControler.h"

FlightControlControler::FlightControlControler(FlightControl& model,FlightCotrolView& view) : model(model), view(view)
{
	modelChanged = false;
}

void FlightControlControler::PassNewMessage(const ADS_BMessage& msg)
{
	std::string ICAO_Address = GetICAO_AddresAsString(msg);
	bool recordExist = false;
	AircraftRecord record;

	recordExist = model.FindAircraftByICAO_Address(ICAO_Address,&record);

	if(recordExist == false)
	{
		record = AircraftRecord(ICAO_Address);
		UpdateRecord(msg,record);
		model.AddRecord(record);

	}

	UpdateRecord(msg,record);
	recordExist = model.FindAircraftByICAO_Address(ICAO_Address,record);

	modelChanged = true;
}

void FlightControlControler::UpdateRecord(const ADS_BMessage& msg, AircraftRecord& record)
{
	 switch(msg.msgtype)
	 {
	 case DF17:
		 if (msg.metype >= 1 && msg.metype <= 4)
		 {

		 }
		 else if(msg.metype >= 9 && msg.metype <= 18)
		 {
			 record.SetAltitude(msg.altitude);
		 }
		 break;
	 }
}

std::string FlightControlControler::GetICAO_AddresAsString(const ADS_BMessage& msg)
{
	char buff[9];
	std::sprintf(buff,"%.2X%.2X%.2X",msg.aa1,msg.aa2,msg.aa3);
	return std::string(buff);
}

void FlightControlControler::UpdateTicksCount(uint32_t ticks)
{
	if(model.TickAllRecords(ticks) == true)
	{
		modelChanged = true;
	}
}

void FlightControlControler::UpdateView()
{
	if(modelChanged == true)
	{
		view.Update(model.GetAllRecords());
		modelChanged = false;
	}
}
